# CFP for Devoxx
# Configuration file
# -------------------------------------------------------------------------------------
#                               DEV FOR UK
# -------------------------------------------------------------------------------------

application.secret="?Ldferthg2dfhKhaBVK8wgyJp`d4mDnBstvjaRrKC^7<^u9MRp5Tp"
application.langs="en,en-US"
logger.root=ERROR
logger.play=INFO
logger.application=DEBUG

# TODO : you can use Mailjet or any other SMTP provider here
# Until this is done, no email is sent by your CFP
smtp.mock="yes"
# Sender (check with Mailjet that the sender email is authorized)
smtp.from="program@devoxx.uk"
# Who should receive a notification for a bug reported on the CFP?
smtp.bugReportRecipient="sja@devoxx.com"
# Optional parameter. If set, then any outgoing email is also BCC to this email
smtp.bcc="sja@devoxx.com"

# UK Github
github.client_id="984d230be3c3dd278410"
github.client_secret="429bc68ea494a3b7cd03b08159057cd84d6b594d"

# Belgium
google.client_id="4508927123-3gglgcc533392ks015r5ockvqnp0rmuc.apps.googleusercontent.com"
google.client_secret="w2FGPl8uYK14DEwrbcXzWvxt"


# Local redis server
# This server must be a slave of your production server.
# You need to configure the slaveof ... ... and masterauth password in the redis.conf file
redis.host=localhost
redis.port=6379
redis.activeDatabase=0
redis.timeout=10

# CleverCloud prod
elasticsearch.host="http://localhost:9200"

# TODO : check Bitbucker, I would prefer that users for Poland reports bugs to you and not us if possible
bitbucket.issues.url="https://bitbucket.org/api/1.0/repositories/nicolas_martignole/cfp-devoxx-fr/issues"
bitbucket.username="nicolas_martignole"
bitbucket.password="xxxxxx"

# Set to false will close the CFP for speakers
cfp.isOpen=true

# ----------------------------------------------------------------------------------------------------------------
actor.cronUpdater.active=true

# Send an email to each speaker every X days, to remind them that there are some draft proposals in their inbox
actor.draftReminder.days=2

stats-context {
  fork-join-executor {
    parallelism-factor = 4.0
    parallelism-max = 32
  }
}

elasticsearch-context {
  fork-join-executor {
    parallelism-factor = 4.0
    parallelism-max = 32
  }
}

play {
  akka {
    event-handlers = ["akka.event.Logging$DefaultLogger", "akka.event.slf4j.Slf4jEventHandler"]
    loglevel = DEBUG
    log-config-on-start = off

    actor {
      default-dispatcher = {
   fork-join-executor {
        # Min number of threads to cap factor-based parallelism number to
        parallelism-min = 8

        # The parallelism factor is used to determine thread pool size using the
        # following formula: ceil(available processors * factor). Resulting size
        # is then bounded by the parallelism-min and parallelism-max values.
        parallelism-factor = 3.0

        # Max number of threads to cap factor-based parallelism number to
        parallelism-max = 64
      }
      }
    }
  }
}



akka.jvm-exit-on-fatal-error=false

# For AngularJS schedule application
parsers.MultipartFormData.maxLength=10240K
parsers.json.maxLength=200K

ws.useragent="Play2 Scala WS for Devoxx"

#ws.timeout=scala.concurrent.duration.Duration.Infinite

akka.log-dead-letters-during-shutdown=false

